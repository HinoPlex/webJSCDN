document.addEventListener('DOMContentLoaded',()=>{const navigationButtons=`
        <div class="navigation-buttons">
            <button id="prevEpisode" onclick="loadPreviousEpisode()"><span>&#171;</span> Prev</button>
            <button id="nextEpisode" onclick="loadNextEpisode()">Next <span>&#187;</span></button>
        </div>
    `;const videoContainer=document.querySelector('#episodeTitle');if(videoContainer){videoContainer.insertAdjacentHTML('afterend',navigationButtons)}
const episodeButtonsContainer=document.querySelector('.episode-buttons');if(episodeButtonsContainer&&typeof episodes!=='undefined'){Object.keys(episodes).sort((a,b)=>parseInt(a)-parseInt(b)).forEach(epNumber=>{const button=document.createElement('button');button.id=`episode-${epNumber}`;button.innerText=episodeTitles[epNumber]||`Episode ${epNumber}`;button.onclick=()=>loadEpisode(epNumber);episodeButtonsContainer.appendChild(button)})}});function showBuffering(){const videoContainer=document.querySelector('.video-container');const existingLoader=videoContainer.querySelector('.lds-ellipsis');if(existingLoader){existingLoader.style.display='inline-block';return}
const loader=document.createElement('div');loader.className='lds-ellipsis';loader.innerHTML=`
        <div></div>
        <div></div>
        <div></div>
        <div></div>
    `;videoContainer.appendChild(loader)}
function hideBuffering(){const loader=document.querySelector('.video-container .lds-ellipsis');if(loader){loader.style.display='none'}}
function switchServer(){const iframe=document.getElementById('videoFrame');const serverSelector=document.getElementById('serverSelector');showBuffering();iframe.src=serverSelector.value}
function loadEpisode(epNumber){const serverSelector=document.getElementById('serverSelector');const iframe=document.getElementById('videoFrame');const episodeTitle=document.getElementById('episodeTitle');if(episodes[epNumber]){serverSelector.innerHTML=episodes[epNumber].map((server,index)=>`<option value="${server}">Server ${index + 1}</option>`).join('');serverSelector.selectedIndex=0;iframe.src=`${episodes[epNumber][0]}`;episodeTitle.innerHTML=`You are watching: <b style="color: #3e83dd;">${episodeTitles[epNumber]}</b>.<br>If the current server doesn't work, please try other servers beside.`;showBuffering();sessionStorage.setItem('lastPlayedEpisode',epNumber);highlightCurrentEpisode(epNumber);updateNavigationButtons(epNumber)}else{alert('Episode not available!')}}
function updateNavigationButtons(epNumber){const prevButton=document.getElementById('prevEpisode');const nextButton=document.getElementById('nextEpisode');const episodeNumbers=Object.keys(episodes).sort((a,b)=>parseInt(a)-parseInt(b));const currentIndex=episodeNumbers.indexOf(epNumber);if(currentIndex===0){prevButton.style.display='none'}else{prevButton.style.display='inline-block'}
if(currentIndex===episodeNumbers.length-1){nextButton.style.display='none'}else{nextButton.style.display='inline-block'}}
document.getElementById('videoFrame').addEventListener('load',hideBuffering);document.addEventListener('DOMContentLoaded',()=>{if(typeof movies!=='undefined'){const serverSelector=document.getElementById('serverSelector');const videoFrame=document.getElementById('videoFrame');movies.forEach(movie=>{const option=document.createElement('option');option.value=movie.url;option.textContent=movie.name;serverSelector.appendChild(option)});videoFrame.src=movies[0].url}
const lastPlayedEpisode=sessionStorage.getItem('lastPlayedEpisode');if(lastPlayedEpisode&&episodes&&episodes[lastPlayedEpisode]){loadEpisode(lastPlayedEpisode)}else if(episodes){const firstEpisode=Object.keys(episodes).sort((a,b)=>parseInt(a)-parseInt(b))[0];loadEpisode(firstEpisode)}});function highlightCurrentEpisode(epNumber){const buttons=document.querySelectorAll('.episode-buttons button');buttons.forEach(button=>{button.classList.remove('active')});const currentButton=document.getElementById(`episode-${epNumber}`);if(currentButton){currentButton.classList.add('active')}}
function loadNextEpisode(){const currentEpisode=sessionStorage.getItem('lastPlayedEpisode');const episodeNumbers=Object.keys(episodes).sort((a,b)=>parseInt(a)-parseInt(b));const currentIndex=episodeNumbers.indexOf(currentEpisode);if(currentIndex<episodeNumbers.length-1){const nextEpisode=episodeNumbers[currentIndex+1];loadEpisode(nextEpisode)}else{alert('No more episodes available!')}}
function loadPreviousEpisode(){const currentEpisode=sessionStorage.getItem('lastPlayedEpisode');const episodeNumbers=Object.keys(episodes).sort((a,b)=>parseInt(a)-parseInt(b));const currentIndex=episodeNumbers.indexOf(currentEpisode);if(currentIndex>0){const previousEpisode=episodeNumbers[currentIndex-1];loadEpisode(previousEpisode)}else{alert('This is the first episode!')}}
